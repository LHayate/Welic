<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Agenda" xml:space="preserve">
    <value>Agenda</value>
  </data>
  <data name="Button_Contact" xml:space="preserve">
    <value>Contato</value>
  </data>
  <data name="Contact_Us" xml:space="preserve">
    <value>Contate-nos</value>
  </data>
  <data name="Desc_About" xml:space="preserve">
    <value>Seja Bem-vinda/o à Welic. Estamos felizes que esteja aqui.

A Welic nasceu de um sonho, o sonho de trazer a todas as pessoas treinamentos e eventos independentes da sua localização e idioma. Nasceu também do sonho de dotar especialistas com conhecimento único, das ferramentas necessárias para que possam rentabilizar o seu conhecimento através de uma ferramenta de trabalho Universal – A Internet.

A nossa missão é levar a todas as pessoas Treinamentos e Eventos únicos, na sua propria Língua e dotar especialistas das ferramentas tecnologicas necessárias para fazer crescer o seu negócio online.

Como equipa desenvolvedora e promotora do Welic, garatimos o nosso total compromisso para desenvolver uma ferramenta altamente inovadora e eficaz, capaz de utilizar o meio online como catalizador de negócios digitais.</value>
  </data>
  <data name="Desc_André" xml:space="preserve">
    <value>Bacharel em Sistemas de Informação (PUC-Minas/Welic), técnico em eletrônica (Escola Estadual Técnico Industrial Professor Fontes). Como IT Specialist a minha formação académica, humana e laboral focou-se no desenvolvimento e implementação de grandes projetos. Tenho experiência no contato com empresas internacionais. Sou um profissional comprometido com a inovação, liderança e trabalho de equipe. Reconhecido ao longo de minha carreira pelo profissionalismo, íngreme curva de aprendizado, bem como, pelos resultados obtidos.</value>
  </data>
  <data name="Desc_Ederson" xml:space="preserve">
    <value>Profissional com Pós-Graduação em Engenharia de Software pela UFMG - Universidade Federal de Minas Gerais e com Graduação em Tecnologia da Informação pelo Centro Universitário Newton Paiva.

Possui 21 anos de experiência em grandes projetos de TI e startups, atuando nas áreas comercial e técnica para clientes do Setor Público e Setor Privado. Na área comercial atuou como Executivo de Clientes, Pré-vendas e Consultor de Negócios para oportunidades de Aplicações, Infraestrutura e Produtos durante o ciclo completo de Vendas utilizando sistemas de CRM, prospectando clientes/negócios, criando funil das oportunidades e fechando negócios.

Na área técnica, atuou em delivery como Gerente de Projetos e Sustentação, Coordenador, Analista de Sistemas e Desenvolvedor, visando a execução de projetos/sustentação de aplicações em ambiente Web e Cliente/Servidor. No ambiente acadêmico, atuou como Palestrante e Professor de TI em Universidades, Cursos Técnicos e Preparatórios.</value>
  </data>
  <data name="Desc_Joel" xml:space="preserve">
    <value>Joel Serrano é empreendedor há mais de 16 anos. Formado em Tecnologias de Informação e com especialização em e-learning. Ainda, é um profissional com elevada experiência em Consultoria e Formação de Jovens e Adultos.

Durante a sua carreira profissional, fundou várias empresas em países como, Portugal, Holanda e Alemanha.

Neste momento Coordena um projeto europeu, em 5 países europeus, no qual estimula o empreendedorismo em jovens na Europa.

Além disso, possui Marketplaces na Internet e especializa-se neste momento em Marketing Digital. Ainda É o CEO da Welic.</value>
  </data>
  <data name="Desc_Lucas" xml:space="preserve">
    <value>Bacharel em analise e desenvolvimento de sistemas na Welic - Universidade de Uberaba, Brasil. Especialista em desenvolvimento Mobile e Desktop atuando na área desde 2015. Participante da comunidade .Net em busca de sempre ajudar a melhorar este universo de desenvolvimento.

Empreendedor membro fundador da Welic como CTO.</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Inicio</value>
  </data>
  <data name="Lançamento" xml:space="preserve">
    <value>Lançamento</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Title_About" xml:space="preserve">
    <value>Sobre a Welic</value>
  </data>
  <data name="Age" xml:space="preserve">
    <value>Idade</value>
  </data>
  <data name="AgeRequired" xml:space="preserve">
    <value>Obrigatório Agenda</value>
  </data>
  <data name="Biography" xml:space="preserve">
    <value>Biografia</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Criar</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-Mail</value>
  </data>
  <data name="EmailInvalid" xml:space="preserve">
    <value>E-mail Inválido</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>E-mail Requerido</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>Primeiro Nome</value>
  </data>
  <data name="FirstNameLong" xml:space="preserve">
    <value>Nome Completo</value>
  </data>
  <data name="FirstNameRequired" xml:space="preserve">
    <value>Primeiro Nome Completo</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Ultimo Nome</value>
  </data>
  <data name="LastNameRequired" xml:space="preserve">
    <value>Ultimo Nome Requerido</value>
  </data>
  <data name="LogOff" xml:space="preserve">
    <value>Desconectar</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Registrar</value>
  </data>
  <data name="Desc_Contact" xml:space="preserve">
    <value>Contate-nos para mais detahes sobre a Welic</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Senha</value>
  </data>
  <data name="Confirm_Pass" xml:space="preserve">
    <value>Confirma Senha</value>
  </data>
  <data name="New_Account" xml:space="preserve">
    <value>Nova Conta</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Olá</value>
  </data>
  <data name="Setting" xml:space="preserve">
    <value>Configuração</value>
  </data>
  <data name="Detail_Course" xml:space="preserve">
    <value>Detalhe de Curso</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Enviar</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>Não </value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>sim </value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Procurar</value>
  </data>
  <data name="Change_Password" xml:space="preserve">
    <value>Alterar Senha</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <data name="Listings" xml:space="preserve">
    <value>Listas</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Mensagem</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Perfil</value>
  </data>
  <data name="Publish_Listing" xml:space="preserve">
    <value>Publicar nova lista</value>
  </data>
  <data name="My_Listting" xml:space="preserve">
    <value>Minhas Listas</value>
  </data>
  <data name="Search_List" xml:space="preserve">
    <value>Buscas Suas Listas</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>Sobre</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="And" xml:space="preserve">
    <value>e</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Alterar</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirma?</value>
  </data>
  <data name="Confirm_Delete" xml:space="preserve">
    <value>Tem certeza de que deseja excluir este</value>
  </data>
  <data name="Confirm_Password" xml:space="preserve">
    <value>Conirma Senha</value>
  </data>
  <data name="Course" xml:space="preserve">
    <value>Curso</value>
  </data>
  <data name="Date_Birthday" xml:space="preserve">
    <value>Data de Aniversario</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Excluir</value>
  </data>
  <data name="Desconnect" xml:space="preserve">
    <value>Disconectar?</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Descrição </value>
  </data>
  <data name="EBook" xml:space="preserve">
    <value>E-Book</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="EditProfile" xml:space="preserve">
    <value>Editar Perfil</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Erro</value>
  </data>
  <data name="Error_Authenticate_user" xml:space="preserve">
    <value>Erro ao tentar autenticar o usuário</value>
  </data>
  <data name="Error_Change" xml:space="preserve">
    <value>Erro ao editar</value>
  </data>
  <data name="Error_Create" xml:space="preserve">
    <value>Erro ao criar</value>
  </data>
  <data name="Error_Deleting" xml:space="preserve">
    <value>Erro excluindo!</value>
  </data>
  <data name="Female" xml:space="preserve">
    <value>Feminino</value>
  </data>
  <data name="Galery" xml:space="preserve">
    <value>Galeria</value>
  </data>
  <data name="Genre" xml:space="preserve">
    <value>Gênero</value>
  </data>
  <data name="I_am" xml:space="preserve">
    <value>Eu sou ?</value>
  </data>
  <data name="LastAcess" xml:space="preserve">
    <value>Ultimo Acesso</value>
  </data>
  <data name="Male" xml:space="preserve">
    <value>Masculino</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>Novo</value>
  </data>
  <data name="NewHere" xml:space="preserve">
    <value>Novo Aqui ? </value>
  </data>
  <data name="NickName" xml:space="preserve">
    <value>NickName</value>
  </data>
  <data name="Not_Delete_Courses" xml:space="preserve">
    <value>Não é possível excluir este curso porque existem vídeos vinculados a ele ainda</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Password_contain" xml:space="preserve">
    <value>Sua senha deve conter:</value>
  </data>
  <data name="Password_Especial" xml:space="preserve">
    <value>Um caractere especial (@ # $!)</value>
  </data>
  <data name="Password_not_Match" xml:space="preserve">
    <value>As senhas não coincidem!</value>
  </data>
  <data name="Password_Number_Length" xml:space="preserve">
    <value>Um número e um mínimo de 8 caracteres</value>
  </data>
  <data name="Password_Tiny" xml:space="preserve">
    <value>Uma letra minuscula </value>
  </data>
  <data name="Password_Upper" xml:space="preserve">
    <value>Uma letra maiuscula</value>
  </data>
  <data name="Password_Weak" xml:space="preserve">
    <value>Senha fraca</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Numero de Telefone</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Preço</value>
  </data>
  <data name="Reelogar" xml:space="preserve">
    <value>Você precisará fazer login novamente</value>
  </data>
  <data name="Require_Add" xml:space="preserve">
    <value>Necessário para adicionar um</value>
  </data>
  <data name="Require_Description" xml:space="preserve">
    <value>É obrigatório Descrição!</value>
  </data>
  <data name="Require_Email" xml:space="preserve">
    <value>Necessário informar o endereço de email</value>
  </data>
  <data name="Require_FirstName" xml:space="preserve">
    <value>Necessário informar o primeiro nome</value>
  </data>
  <data name="Require_LastName" xml:space="preserve">
    <value>Necessário informar o sobrenome</value>
  </data>
  <data name="Require_Password" xml:space="preserve">
    <value>Necessário informar a senha!</value>
  </data>
  <data name="Require_Title" xml:space="preserve">
    <value>É um título obrigatório!</value>
  </data>
  <data name="Requite_phone" xml:space="preserve">
    <value>Necessário informar o número do telefone</value>
  </data>
  <data name="Schedule" xml:space="preserve">
    <value>Agenda</value>
  </data>
  <data name="SignInFace" xml:space="preserve">
    <value>Login Com Facebook </value>
  </data>
  <data name="SignInGoogle" xml:space="preserve">
    <value>Login Com Google</value>
  </data>
  <data name="SignInMail" xml:space="preserve">
    <value>Login Com Email </value>
  </data>
  <data name="Student" xml:space="preserve">
    <value>Estudante</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Sucesso</value>
  </data>
  <data name="Success_Change" xml:space="preserve">
    <value>Alterado com Sucesso</value>
  </data>
  <data name="Success_Create" xml:space="preserve">
    <value>Criado Com sucesso</value>
  </data>
  <data name="Teacher" xml:space="preserve">
    <value>Professor</value>
  </data>
  <data name="TermsUse" xml:space="preserve">
    <value>Termos de Uso</value>
  </data>
  <data name="Themes" xml:space="preserve">
    <value>Temas</value>
  </data>
  <data name="Undefined" xml:space="preserve">
    <value>Indefinido </value>
  </data>
  <data name="Video" xml:space="preserve">
    <value>Video</value>
  </data>
  <data name="Inicio" xml:space="preserve">
    <value>Inicio</value>
  </data>
</root>