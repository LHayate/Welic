using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Drawing;
using System.Data;
using Microsoft.Reporting.WinForms;

namespace Classes.Uteis
{
    public static class Imagens
    {
        public static Bitmap EscreverTextoEmImagem(Bitmap imagem, string texto, Font fonte = null, Color? cor = null, StringFormat formato = null, PointF? localizacao = null)
        {
            //Carregar a Imagem Padrão de Fundo
            Bitmap bitMapImage = imagem;

            //Carregar os gráficos do bitmap, onde será escrito o texto
            Graphics graphicImage = Graphics.FromImage(bitMapImage);

            //Definir a qualidade da conversão do texto para imagem
            graphicImage.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.HighQuality;

            #region Atribuir valores padrão para os parâmetros que não foram informados
            if (fonte == null)
                fonte = new Font("Verdana", 16, FontStyle.Bold);

            if (localizacao == null)
                localizacao = new PointF(bitMapImage.Width / 2, 50);

            if (formato == null)
            {
                formato = new StringFormat();
                formato.LineAlignment = StringAlignment.Center;
                formato.Alignment = StringAlignment.Center;
            }

            if (cor == null)
                cor = Color.FromArgb(22, 55, 109);
            #endregion

            //Definir o brush que aplicará a cor ao texto
            System.Drawing.SolidBrush brush;
            brush = new System.Drawing.SolidBrush(cor.Value);

            //Escrever o texto nos gráficos da imagem
            graphicImage.DrawString(texto, fonte, brush, new PointF(localizacao.Value.X, localizacao.Value.Y), formato);
            graphicImage.Save();

            return bitMapImage;
        }
        
        public static Bitmap EscreverTextoEmImagem(Image imagem, string texto, Font fonte = null, Color? cor = null, StringFormat formato = null, PointF? localizacao = null)
        {
            return EscreverTextoEmImagem(new Bitmap(imagem), texto, fonte, cor, formato, localizacao);
        }

        public static ReportDataSource ReportDataSourceLogoRelatorio(System.Drawing.Image pImg)
        {
            /*Cria o DataSource para o Relatório onde terá o DataTable com a Imagem do Logo*/
            ReportDataSource rdsImg = new ReportDataSource();
            rdsImg.Name = "DataSetImg";

            /*Cria o DataTable que irá armazenar a imagem do Logo*/
            System.Data.DataTable dtImg = new System.Data.DataTable();

            System.Data.DataRow row = dtImg.NewRow();

            dtImg.Columns.Add("Codigo", typeof(int));
            dtImg.Columns.Add("Descricao", typeof(string));
            dtImg.Columns.Add("Img", typeof(System.Byte[]));

            /*Converte a imagem recebida no parâmetro para array de bytes para armazenar no DataTable*/
            System.IO.MemoryStream ms = new System.IO.MemoryStream();
            pImg.Save(ms, System.Drawing.Imaging.ImageFormat.Png);

            row["Codigo"] = 1;
            row["Descricao"] = "Logo Uniube";
            row["Img"] = ms.ToArray();

            dtImg.Rows.Add(row);

            rdsImg.Value = dtImg;

            return rdsImg;
        }
    }
}
