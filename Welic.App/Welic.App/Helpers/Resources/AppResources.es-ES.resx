<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="Agenda" xml:space="preserve">
		<value>Programar</value>
	</data>
	<data name="Button_Contact" xml:space="preserve">
		<value>contacto</value>
	</data>
	<data name="Contact_Us" xml:space="preserve">
		<value>Contáctenos</value>
	</data>
	<data name="Desc_About" xml:space="preserve">
		<value>Sea Bienvenida a Welic. Estamos contentos de estar aquí.

Welic nació de un sueño, el sueño de traer a todas las personas entrenamientos y eventos independientes de su ubicación e idioma. Nació también del sueño de dotar a expertos con conocimiento único, de las herramientas necesarias para que puedan rentabilizar su conocimiento a través de una herramienta de trabajo Universal - Internet.

Nuestra misión es llevar a todas las personas Entrenamientos y Eventos únicos, en su propia lengua y dotar a expertos de las herramientas tecnológicas necesarias para hacer crecer su negocio en línea.

Como equipo desarrollador y promotora de Welic, nos guste nuestro compromiso total para desarrollar una herramienta altamente innovadora y eficaz, capaz de utilizar el medio en línea como catalizador de negocio digital.</value>
	</data>
	<data name="Desc_André" xml:space="preserve">
		<value>Licenciatura en Sistemas de Información (PUC-Minas / Welic), técnico en electrónica (Escuela Estadual Técnico Industrial Profesor Fontes). Como IT Specialist mi formación académica, humana y laboral se centró en el desarrollo e implementación de grandes proyectos. Tengo experiencia en contacto con empresas internacionales. Soy un profesional comprometido con la innovación, el liderazgo y el trabajo en equipo. Reconocido a lo largo de mi carrera por el profesionalismo, empinada curva de aprendizaje, así como por los resultados obtenidos.</value>
	</data>
	<data name="Desc_Contact" xml:space="preserve">
		<value>Contáctenos para más detalles sobre Welic</value>
	</data>
	<data name="Desc_Ederson" xml:space="preserve">
		<value>Profesional con Postgrado en Ingeniería de Software por la UFMG - Universidad Federal de Minas Gerais y con Graduación en Tecnología de la Información por el Centro Universitario Newton Paiva.

Tiene 21 años de experiencia en grandes proyectos de TI y startups, actuando en las áreas comercial y técnica para clientes del Sector Público y Sector Privado. En el área comercial actuó como Ejecutivo de Clientes, Pre-ventas y Consultor de Negocios para oportunidades de Aplicaciones, Infraestructura y Productos durante el ciclo completo de Ventas utilizando sistemas de CRM, prospectando clientes / negocios, creando embudo de las oportunidades y cerrando negocios.

En el área técnica, actuó en delivery como Gerente de Proyectos y Sustentación, Coordinador, Analista de Sistemas y Desarrollador, buscando la ejecución de proyectos / sustentación de aplicaciones en ambiente Web y Cliente / Servidor. En el ambiente académico, actuó como Conferencista y Profesor de TI en Universidades, Cursos Técnicos y Preparatorios.</value>
	</data>
	<data name="Desc_Joel" xml:space="preserve">
		<value>Joel Serrano es empresario desde hace más de 16 años. Formado en Tecnologías de Información y con especialización en e-learning. También es un profesional con elevada experiencia en Consultoría y Formación de Jóvenes y Adultos.

Durante su carrera profesional, fundó varias empresas de países como Portugal, Holanda y Alemania.

En este momento Coordina un proyecto europeo, en 5 países europeos, en el que estimula el espíritu empresarial en jóvenes en Europa.

Además, posee Marketplaces en Internet y se especializa en este momento en Marketing Digital. Todavía es el CEO de Welic.</value>
	</data>
	<data name="Desc_Lucas" xml:space="preserve">
		<value>Licenciatura en analisis y desarrollo de sistemas en la Welic - Universidad de Uberaba, Brasil. Especialista en desarrollo Mobile y Desktop que actúa en el área desde 2015. Participante de la comunidad .Net en busca de siempre ayudar a mejorar este universo de desarrollo.

Emprendedor miembro fundador de Welic como CTO.</value>
	</data>
	<data name="Inicio" xml:space="preserve">
		<value>Casa</value>
	</data>
	<data name="Lançamento" xml:space="preserve">
		<value>Lanzamiento</value>
	</data>
	<data name="Login" xml:space="preserve">
		<value>Iniciar sesión</value>
	</data>
	<data name="Title_About" xml:space="preserve">
		<value>Acerca de Welic</value>
	</data>
	<data name="Age" xml:space="preserve">
		<value>Años</value>
	</data>
	<data name="AgeRequired" xml:space="preserve">
		<value>Edad requiere</value>
	</data>
	<data name="Biography" xml:space="preserve">
		<value>Biografía</value>
	</data>
	<data name="Create" xml:space="preserve">
		<value>Crear</value>
	</data>
	<data name="Email" xml:space="preserve">
		<value>Email</value>
	</data>
	<data name="EmailInvalid" xml:space="preserve">
		<value>Correo electrónico no válido</value>
	</data>
	<data name="EmailRequired" xml:space="preserve">
		<value>Requerir correo electrónico</value>
	</data>
	<data name="FirstName" xml:space="preserve">
		<value>Nombre de pila</value>
	</data>
	<data name="FirstNameLong" xml:space="preserve">
		<value>Nombre completo</value>
	</data>
	<data name="FirstNameRequired" xml:space="preserve">
		<value>Primer nombre requerido</value>
	</data>
	<data name="LastName" xml:space="preserve">
		<value>Apellido</value>
	</data>
	<data name="LastNameRequired" xml:space="preserve">
		<value>Apellido Necesario</value>
	</data>
	<data name="LogOff" xml:space="preserve">
		<value>Desconectarse</value>
	</data>
	<data name="Register" xml:space="preserve">
		<value>Registro</value>
	</data>
	<data name="Password" xml:space="preserve">
		<value>Contraseña</value>
	</data>
	<data name="Confirm_Pass" xml:space="preserve">
		<value>Confirma la Contraseña</value>
	</data>
	<data name="New_Account" xml:space="preserve">
		<value>Nueva cuenta</value>
	</data>
	<data name="Submit" xml:space="preserve">
		<value>Enviar</value>
	</data>
</root>